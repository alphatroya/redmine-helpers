#!/usr/bin/env bash

main() {
    next_status_id=""
    assignee=""

    while getopts ":n:a:" opt; do
        case $opt in
            n ) next_status_id=$OPTARG ;;
            a ) assignee=$OPTARG ;;
            \? ) print_usage ;;
            :)
            echo "Option -$OPTARG requires an argument."
            exit 1
            ;;
        esac
    done

    {
        [[ -z "$next_status_id" ]] ||
        [[ -z "$assignee" ]]
    } &&
    print_usage

    shift $((OPTIND - 1))
    mapfile -t lines < <(echo "$@" | tr ' ' '\n')

    for issue_id in "${lines[@]}"
    do
        if [[ -z $issue_id ]]; then
            continue
        fi
        echo "{ \"issue\": { \"assigned_to_id\": $assignee, \"status_id\": $next_status_id  }}" |
            http PUT "$REDMINE_HOST/issues/$issue_id.json" "X-Redmine-API-Key":"$REDMINE_API_KEY" >/dev/null
        echo "Updated status for issue with id #$issue_id âœ…"
    done
}

print_usage() {
    echo "Usage: $0 -n <next_status_id> -a <assignee> <tickers_numbers>..."
    exit 1
}

. redmine-check
check_env
main "$@"
